name: CI/CD Deployment to Firebase
on:
  push:
    branches:
      - main
      - develop
      - staging
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node.js Setup
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install

      - name: Lint
        working-directory: ./functions
        run: npm run lint

  deploy-dev:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node.js Setup
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install

      - name: Deploy to Development
        run: echo "Deploying to Development Environment"
        # This is only an example for DEV deployment.

  deploy-stg:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node.js Setup
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install

      - name: Deploy to Staging
        run: echo "Deploying to Staging Environment"
        # This is only an example for STG deployment.

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node.js Setup
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install && npm i -g firebase-tools firebase

      - name: Deploy to Production
        run: echo "Deploying to Production Environment"

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_INCOMPASS_CASE_STUDY }}
          channelId: live
          projectId: incompass-case-study

      - name: Configure Environment Variables
        working-directory: ./functions
        run: |
          touch .env
          echo PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}" | sed 's/\\n/\n/g' >> .env
          echo PROJECT_ID=${{ secrets.PROJECT_ID }} >> .env
          echo CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          cat .env

      - name: Deploy Functions
        working-directory: ./functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: npm run deploy
